"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.componentGenerator = void 0;
const tslib_1 = require("tslib");
const devkit_1 = require("@nrwl/devkit");
const ngcli_adapter_1 = require("@nrwl/devkit/ngcli-adapter");
const path_1 = require("../utils/path");
const component_1 = require("./lib/component");
const normalize_options_1 = require("./lib/normalize-options");
function componentGenerator(tree, rawOptions) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const options = (0, normalize_options_1.normalizeOptions)(tree, rawOptions);
        const { projectSourceRoot } = options, schematicOptions = tslib_1.__rest(options, ["projectSourceRoot"]);
        checkPathUnderProjectRoot(tree, options);
        const angularComponentSchematic = (0, ngcli_adapter_1.wrapAngularDevkitSchematic)('@schematics/angular', 'component');
        yield angularComponentSchematic(tree, schematicOptions);
        (0, component_1.exportComponentInEntryPoint)(tree, options);
        yield (0, devkit_1.formatFiles)(tree);
    });
}
exports.componentGenerator = componentGenerator;
function checkPathUnderProjectRoot(tree, schema) {
    var _a;
    if (!schema.path) {
        return;
    }
    const project = (_a = schema.project) !== null && _a !== void 0 ? _a : (0, devkit_1.readWorkspaceConfiguration)(tree).defaultProject;
    const { root } = (0, devkit_1.readProjectConfiguration)(tree, project);
    let pathToComponent = (0, devkit_1.normalizePath)(schema.path);
    pathToComponent = pathToComponent.startsWith('/')
        ? pathToComponent.slice(1)
        : pathToComponent;
    if (!(0, path_1.pathStartsWith)(pathToComponent, root)) {
        throw new Error(`The path provided for the component (${schema.path}) does not exist under the project root (${root}). ` +
            `Please make sure to provide a path that exists under the project root.`);
    }
}
exports.default = componentGenerator;
//# sourceMappingURL=component.js.map