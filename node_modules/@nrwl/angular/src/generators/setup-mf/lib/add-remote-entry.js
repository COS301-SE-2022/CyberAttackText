"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.addRemoteEntry = void 0;
const devkit_1 = require("@nrwl/devkit");
function addRemoteEntry(tree, { appName, routing, mfType, prefix, standalone }, appRoot) {
    if (mfType === 'remote') {
        prefix = prefix !== null && prefix !== void 0 ? prefix : (0, devkit_1.readWorkspaceConfiguration)(tree).npmScope;
        (0, devkit_1.generateFiles)(tree, standalone
            ? (0, devkit_1.joinPathFragments)(__dirname, '../files/standalone-entry-component-files')
            : (0, devkit_1.joinPathFragments)(__dirname, '../files/entry-module-files'), `${appRoot}/src/app/remote-entry`, {
            tmpl: '',
            appName,
            routing,
            prefix,
        });
        if (!standalone) {
            tree.write(`${appRoot}/src/app/app.module.ts`, `/* 
      * This RemoteEntryModule is imported here to allow TS to find the Module during 
      * compilation, allowing it to be included in the built bundle. This is required 
      * for the Module Federation Plugin to expose the Module correctly.
      * */
      import { RemoteEntryModule } from './remote-entry/entry.module';
${tree.read(`${appRoot}/src/app/app.module.ts`, 'utf-8')}`);
        }
    }
}
exports.addRemoteEntry = addRemoteEntry;
//# sourceMappingURL=add-remote-entry.js.map