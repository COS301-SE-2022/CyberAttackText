"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getPipeFileInfo = exports.getDirectiveFileInfo = exports.getComponentFileInfo = void 0;
const devkit_1 = require("@nrwl/devkit");
function getComponentFileInfo(tree, options) {
    return getFileInfo(tree, options, 'component');
}
exports.getComponentFileInfo = getComponentFileInfo;
function getDirectiveFileInfo(tree, options) {
    return getFileInfo(tree, options, 'directive');
}
exports.getDirectiveFileInfo = getDirectiveFileInfo;
function getPipeFileInfo(tree, options) {
    return getFileInfo(tree, options, 'pipe');
}
exports.getPipeFileInfo = getPipeFileInfo;
function getFileInfo(tree, options, defaultType) {
    var _a, _b;
    const project = (_a = options.project) !== null && _a !== void 0 ? _a : (0, devkit_1.readWorkspaceConfiguration)(tree).defaultProject;
    const { root, sourceRoot, projectType } = (0, devkit_1.readProjectConfiguration)(tree, project);
    const { fileName: normalizedName } = (0, devkit_1.names)(options.name);
    const fileName = `${normalizedName}.${options.type ? (0, devkit_1.names)(options.type).fileName : defaultType}`;
    const projectSourceRoot = sourceRoot !== null && sourceRoot !== void 0 ? sourceRoot : (0, devkit_1.joinPathFragments)(root, 'src');
    const path = (_b = options.path) !== null && _b !== void 0 ? _b : (0, devkit_1.joinPathFragments)(projectSourceRoot, projectType === 'application' ? 'app' : 'lib');
    const directory = options.flat
        ? (0, devkit_1.normalizePath)(path)
        : (0, devkit_1.joinPathFragments)(path, normalizedName);
    const filePath = (0, devkit_1.joinPathFragments)(directory, `${fileName}.ts`);
    return { directory, fileName, filePath };
}
//# sourceMappingURL=file-info.js.map