import { createFeatureSelector, createSelector } from '@ngrx/store';
import { <%= constantName %>_FEATURE_KEY, <%= className %>State, <%= propertyName %>Adapter } from './<%= fileName %>.reducer';

// Lookup the '<%= className %>' feature state managed by NgRx
export const get<%= className %>State = createFeatureSelector<<%= className %>State>(<%= constantName %>_FEATURE_KEY);

const { selectAll, selectEntities } = <%= propertyName %>Adapter.getSelectors();

export const get<%= className %>Loaded = createSelector(
  get<%= className %>State,
  (state: <%= className %>State) => state.loaded
);

export const get<%= className %>Error = createSelector(
  get<%= className %>State,
  (state: <%= className %>State) => state.error
);

export const getAll<%= className %> = createSelector(
  get<%= className %>State,
  (state: <%= className %>State) => selectAll(state)
);

export const get<%= className %>Entities = createSelector(
  get<%= className %>State,
  (state: <%= className %>State) => selectEntities(state)
);

export const getSelectedId = createSelector(
  get<%= className %>State,
  (state: <%= className %>State) => state.selectedId
);

export const getSelected = createSelector(
  get<%= className %>Entities,
  getSelectedId,
  (entities, selectedId) => (selectedId ? entities[selectedId] : undefined)
);
