{
  "name": "Nx Angular",
  "version": "0.1",
  "extends": ["@schematics/angular", "@nrwl/workspace"],
  "schematics": {
    "add-linting": {
      "factory": "./src/generators/add-linting/compat",
      "schema": "./src/generators/add-linting/schema.json",
      "description": "Adds linting configuration to an Angular project.",
      "hidden": true
    },
    "application": {
      "factory": "./src/generators/application/application.compat#applicationSchematic",
      "schema": "./src/generators/application/schema.json",
      "aliases": ["app"],
      "x-type": "application",
      "description": "Creates an Angular application."
    },
    "component": {
      "factory": "./src/generators/component/component.compat",
      "schema": "./src/generators/component/schema.json",
      "aliases": ["c"],
      "description": "Generate an Angular Component."
    },
    "component-cypress-spec": {
      "factory": "./src/generators/component-cypress-spec/compat",
      "schema": "./src/generators/component-cypress-spec/schema.json",
      "description": "Creates a Cypress spec for a UI component that has a story.",
      "hidden": true
    },
    "component-story": {
      "factory": "./src/generators/component-story/compat",
      "schema": "./src/generators/component-story/schema.json",
      "description": "Creates a `stories.ts` file for a component."
    },
    "convert-tslint-to-eslint": {
      "factory": "./src/generators/convert-tslint-to-eslint/convert-tslint-to-eslint#conversionSchematic",
      "schema": "./src/generators/convert-tslint-to-eslint/schema.json",
      "description": "Converts a project from TSLint to ESLint."
    },
    "downgrade-module": {
      "factory": "./src/generators/downgrade-module/compat",
      "schema": "./src/generators/downgrade-module/schema.json",
      "description": "Sets up a Downgrade Module."
    },
    "init": {
      "factory": "./src/generators/init/init.compat#initSchematic",
      "schema": "./src/generators/init/schema.json",
      "description": "Initializes the `@nrwl/angular` plugin.",
      "hidden": true
    },
    "karma": {
      "factory": "./src/generators/karma/compat",
      "schema": "./src/generators/karma/schema.json",
      "description": "Adds Karma configuration to a workspace."
    },
    "karma-project": {
      "factory": "./src/generators/karma-project/compat",
      "schema": "./src/generators/karma-project/schema.json",
      "description": "Adds Karma configuration to a project."
    },
    "library": {
      "factory": "./src/generators/library/library.compat#librarySchematic",
      "schema": "./src/generators/library/schema.json",
      "aliases": ["lib"],
      "x-type": "library",
      "description": "Creates an Angular library."
    },
    "library-secondary-entry-point": {
      "factory": "./src/generators/library-secondary-entry-point/compat",
      "schema": "./src/generators/library-secondary-entry-point/schema.json",
      "aliases": ["secondary-entry-point", "entry-point"],
      "description": "Creates a secondary entry point for an Angular publishable library."
    },
    "remote": {
      "factory": "./src/generators/remote/remote.compat",
      "schema": "./src/generators/remote/schema.json",
      "x-type": "application",
      "description": "Generate a Remote Angular Module Federation Application."
    },
    "move": {
      "factory": "./src/generators/move/move#angularMoveSchematic",
      "schema": "./src/generators/move/schema.json",
      "aliases": ["mv"],
      "description": "Moves an Angular application or library to another folder within the workspace and updates the project configuration."
    },
    "convert-to-with-mf": {
      "factory": "./src/generators/convert-to-with-mf/convert-to-with-mf.compat",
      "schema": "./src/generators/convert-to-with-mf/schema.json",
      "description": "Converts an old micro frontend configuration to use the new `withModuleFederation` helper. It will run successfully if the following conditions are met: \n - Is either a host or remote application \n - Shared npm package configurations have not been modified \n - Name used to identify the Micro Frontend application matches the project name \n\n{% callout type=\"warning\" title=\"Overrides\" %}This generator will overwrite your webpack config. If you have additional custom configuration in your config file, it will be lost!{% /callout %}"
    },
    "host": {
      "factory": "./src/generators/host/host.compat",
      "schema": "./src/generators/host/schema.json",
      "x-type": "application",
      "description": "Generate a Host Angular Module Federation Application."
    },
    "ng-add": {
      "factory": "./src/generators/ng-add/compat",
      "schema": "./src/generators/ng-add/schema.json",
      "description": "Migrates an Angular CLI workspace to Nx or adds the Angular plugin to an Nx workspace.",
      "hidden": true
    },
    "ngrx": {
      "factory": "./src/generators/ngrx/compat",
      "schema": "./src/generators/ngrx/schema.json",
      "description": "Adds NgRx support to an application or library."
    },
    "scam-to-standalone": {
      "factory": "./src/generators/scam-to-standalone/compat",
      "schema": "./src/generators/scam-to-standalone/schema.json",
      "description": "Convert an existing Single Component Angular Module (SCAM) to a Standalone Component."
    },
    "scam": {
      "factory": "./src/generators/scam/scam.compat",
      "schema": "./src/generators/scam/schema.json",
      "description": "Generate a component with an accompanying Single Component Angular Module (SCAM)."
    },
    "scam-directive": {
      "factory": "./src/generators/scam-directive/scam-directive.compat",
      "schema": "./src/generators/scam-directive/schema.json",
      "description": "Generate a directive with an accompanying Single Component Angular Module (SCAM)."
    },
    "scam-pipe": {
      "factory": "./src/generators/scam-pipe/scam-pipe.compat",
      "schema": "./src/generators/scam-pipe/schema.json",
      "description": "Generate a pipe with an accompanying Single Component Angular Module (SCAM)."
    },
    "setup-mf": {
      "factory": "./src/generators/setup-mf/setup-mf.compat",
      "schema": "./src/generators/setup-mf/schema.json",
      "description": "Generate a Module Federation configuration for a given Angular application."
    },
    "setup-tailwind": {
      "factory": "./src/generators/setup-tailwind/setup-tailwind.compat",
      "schema": "./src/generators/setup-tailwind/schema.json",
      "description": "Configures Tailwind CSS for an application or a buildable/publishable library."
    },
    "stories": {
      "factory": "./src/generators/stories/compat",
      "schema": "./src/generators/stories/schema.json",
      "description": "Creates stories/specs for all components declared in a project."
    },
    "storybook-configuration": {
      "factory": "./src/generators/storybook-configuration/compat",
      "schema": "./src/generators/storybook-configuration/schema.json",
      "description": "Adds Storybook configuration to a project."
    },
    "upgrade-module": {
      "factory": "./src/generators/upgrade-module/compat",
      "schema": "./src/generators/upgrade-module/schema.json",
      "description": "Sets up an Upgrade Module."
    },
    "web-worker": {
      "factory": "./src/generators/web-worker/compat",
      "schema": "./src/generators/web-worker/schema.json",
      "description": "Creates a Web Worker."
    },
    "change-storybook-targets": {
      "factory": "./src/generators/change-storybook-targets/compat",
      "schema": "./src/generators/change-storybook-targets/schema.json",
      "description": "Change storybook targets for Angular projects to use @storybook/angular executors",
      "hidden": false
    }
  },
  "generators": {
    "add-linting": {
      "factory": "./src/generators/add-linting/add-linting",
      "schema": "./src/generators/add-linting/schema.json",
      "description": "Adds linting configuration to an Angular project.",
      "hidden": true
    },
    "application": {
      "factory": "./src/generators/application/application",
      "schema": "./src/generators/application/schema.json",
      "aliases": ["app"],
      "x-type": "application",
      "description": "Creates an Angular application."
    },
    "component": {
      "factory": "./src/generators/component/component",
      "schema": "./src/generators/component/schema.json",
      "aliases": ["c"],
      "description": "Generate an Angular Component."
    },
    "component-cypress-spec": {
      "factory": "./src/generators/component-cypress-spec/component-cypress-spec",
      "schema": "./src/generators/component-cypress-spec/schema.json",
      "description": "Creates a Cypress spec for a UI component that has a story.",
      "hidden": true
    },
    "component-story": {
      "factory": "./src/generators/component-story/component-story",
      "schema": "./src/generators/component-story/schema.json",
      "description": "Creates a stories.ts file for a component."
    },
    "convert-tslint-to-eslint": {
      "factory": "./src/generators/convert-tslint-to-eslint/convert-tslint-to-eslint#conversionGenerator",
      "schema": "./src/generators/convert-tslint-to-eslint/schema.json",
      "description": "Converts a project from TSLint to ESLint."
    },
    "downgrade-module": {
      "factory": "./src/generators/downgrade-module/downgrade-module",
      "schema": "./src/generators/downgrade-module/schema.json",
      "description": "Sets up a Downgrade Module."
    },
    "init": {
      "factory": "./src/generators/init/init",
      "schema": "./src/generators/init/schema.json",
      "description": "Initializes the `@nrwl/angular` plugin.",
      "hidden": true
    },
    "karma": {
      "factory": "./src/generators/karma/karma",
      "schema": "./src/generators/karma/schema.json",
      "description": "Adds Karma configuration to a workspace."
    },
    "karma-project": {
      "factory": "./src/generators/karma-project/karma-project",
      "schema": "./src/generators/karma-project/schema.json",
      "description": "Adds Karma configuration to a project."
    },
    "library": {
      "factory": "./src/generators/library/library",
      "schema": "./src/generators/library/schema.json",
      "aliases": ["lib"],
      "x-type": "library",
      "description": "Creates an Angular library."
    },
    "library-secondary-entry-point": {
      "factory": "./src/generators/library-secondary-entry-point/library-secondary-entry-point",
      "schema": "./src/generators/library-secondary-entry-point/schema.json",
      "aliases": ["secondary-entry-point", "entry-point"],
      "description": "Creates a secondary entry point for an Angular publishable library."
    },
    "remote": {
      "factory": "./src/generators/remote/remote",
      "schema": "./src/generators/remote/schema.json",
      "x-type": "application",
      "description": "Generate a Remote Angular Module Federation Application."
    },
    "move": {
      "factory": "./src/generators/move/move#angularMoveGenerator",
      "schema": "./src/generators/move/schema.json",
      "aliases": ["mv"],
      "description": "Moves an Angular application or library to another folder within the workspace and updates the project configuration."
    },
    "convert-to-with-mf": {
      "factory": "./src/generators/convert-to-with-mf/convert-to-with-mf",
      "schema": "./src/generators/convert-to-with-mf/schema.json",
      "description": "Converts an old micro frontend configuration to use the new withModuleFederation helper. It will run successfully if the following conditions are met: \n - Is either a host or remote application \n - Shared npm package configurations have not been modified \n - Name used to identify the Micro Frontend application matches the project name \n\n{% callout type=\"warning\" title=\"Overrides\" %}This generator will overwrite your webpack config. If you have additional custom configuration in your config file, it will be lost!{% /callout %}"
    },
    "host": {
      "factory": "./src/generators/host/host",
      "schema": "./src/generators/host/schema.json",
      "x-type": "application",
      "description": "Generate a Host Angular Module Federation Application."
    },
    "ng-add": {
      "factory": "./src/generators/ng-add/ng-add",
      "schema": "./src/generators/ng-add/schema.json",
      "description": "Migrates an Angular CLI workspace to Nx or adds the Angular plugin to an Nx workspace.",
      "hidden": true
    },
    "ngrx": {
      "factory": "./src/generators/ngrx/ngrx",
      "schema": "./src/generators/ngrx/schema.json",
      "description": "Adds NgRx support to an application or library."
    },
    "scam-to-standalone": {
      "factory": "./src/generators/scam-to-standalone/scam-to-standalone",
      "schema": "./src/generators/scam-to-standalone/schema.json",
      "description": "Convert an existing Single Component Angular Module (SCAM) to a Standalone Component."
    },
    "scam": {
      "factory": "./src/generators/scam/scam",
      "schema": "./src/generators/scam/schema.json",
      "description": "Generate a component with an accompanying Single Component Angular Module (SCAM)."
    },
    "scam-directive": {
      "factory": "./src/generators/scam-directive/scam-directive",
      "schema": "./src/generators/scam-directive/schema.json",
      "description": "Generate a directive with an accompanying Single Component Angular Module (SCAM)."
    },
    "scam-pipe": {
      "factory": "./src/generators/scam-pipe/scam-pipe",
      "schema": "./src/generators/scam-pipe/schema.json",
      "description": "Generate a pipe with an accompanying Single Component Angular Module (SCAM)."
    },
    "setup-mf": {
      "factory": "./src/generators/setup-mf/setup-mf",
      "schema": "./src/generators/setup-mf/schema.json",
      "description": "Generate a Module Federation configuration for a given Angular application."
    },
    "setup-tailwind": {
      "factory": "./src/generators/setup-tailwind/setup-tailwind",
      "schema": "./src/generators/setup-tailwind/schema.json",
      "description": "Configures Tailwind CSS for an application or a buildable/publishable library."
    },
    "stories": {
      "factory": "./src/generators/stories/stories",
      "schema": "./src/generators/stories/schema.json",
      "description": "Creates stories/specs for all components declared in a project."
    },
    "storybook-configuration": {
      "factory": "./src/generators/storybook-configuration/storybook-configuration",
      "schema": "./src/generators/storybook-configuration/schema.json",
      "description": "Adds Storybook configuration to a project."
    },
    "upgrade-module": {
      "factory": "./src/generators/upgrade-module/upgrade-module",
      "schema": "./src/generators/upgrade-module/schema.json",
      "description": "Sets up an Upgrade Module."
    },
    "web-worker": {
      "factory": "./src/generators/web-worker/web-worker",
      "schema": "./src/generators/web-worker/schema.json",
      "description": "Creates a Web Worker."
    },
    "change-storybook-targets": {
      "factory": "./src/generators/change-storybook-targets/change-storybook-targets",
      "schema": "./src/generators/change-storybook-targets/schema.json",
      "description": "Change storybook targets for Angular projects to use @storybook/angular executors"
    }
  }
}
